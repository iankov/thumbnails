<?php

namespace Iankov\Thumbnails\Tests;

class ThumbnailTest extends TestCase
{
    protected $sizes = [
        ['width' => 300, 'height' => 200, 'crop' => 1],
        ['width' => 200, 'height' => 300, 'crop' => 1],
        ['width' => 350, 'height' => 150, 'crop' => 0]
    ];

    protected $fileTypes = [
        'png' => 'image/png',
        'jpg' => 'image/jpeg',
        'gif' => 'image/gif'
    ];

    protected $filename = 'test';

    /**
     * @runInSeparateProcess
     */
    public function testRoute()
    {
        //generate unique directory name for testing
        $dir = md5(uniqid().time());

        $this->generateImages($dir);
        $config = config('thumbnails');
        $config['dirs'][] = $dir;
        $config['sizes'] = array_merge($config['sizes'], $this->sizes);
        config(['thumbnails' => $config]);

        foreach ($this->sizes as $size) {
            $thumbDir = $dir . '/' . $size['width'] . 'x' . $size['height'] . 'x' . $size['crop'];

            foreach ($this->fileTypes as $format => $mime) {
                $thumbPath = $thumbDir . '/' . $this->filename . '.' . $format;
                $this->get('/' . $thumbPath)
                    ->assertSuccessful()
                    ->assertHeader('Content-type', $mime);

                unlink(public_path($thumbPath));
            }

            rmdir(public_path($thumbDir));
        }

        //Remove images generated by generateImages
        foreach (array_keys($this->fileTypes) as $format) {
            unlink(public_path($dir . '/' . $this->filename . '.' . $format));
        }

        rmdir(public_path($dir));
    }

    /**
     * Generate images for testing
     *
     * @param string $dir
     */
    protected function generateImages(string $dir)
    {
        $path = public_path($dir);
        mkdir($path, 0755, true);

        $image = imagecreatetruecolor(400, 400);
        $background = imagecolorallocate($image, 150, 50, 0);
        imagefill($image, 0, 0, $background);
        $color = imagecolorallocate($image, 0, 150, 150);
        imagefilledellipse($image, 200, 200, 300, 300, $color);

        imagepng($image, $path.'/'.$this->filename.'.png');
        imagejpeg($image, $path.'/'.$this->filename.'.jpg');
        imagegif($image, $path.'/'.$this->filename.'.gif');
    }
}